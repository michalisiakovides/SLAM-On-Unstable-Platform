<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="example">
  <xacro:arg name="gpu" default="false"/>
  <xacro:property name="gpu" value="$(arg gpu)" />
  <xacro:arg name="organize_cloud" default="false"/>
  <xacro:property name="organize_cloud" value="$(arg organize_cloud)" />

  <material name="blue">
    <color rgba="0 0 0.8 1"/>
  </material>
  
  <!-- Base Footprint -->
  <link name="base_footprint" />

  <!-- Base Link -->
  <joint name="footprint" type="fixed" >
   <parent link="base_footprint" />
    <child link="base_link" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </joint>
  <link name="base_link" >
    <collision>
      <geometry>
        <box size="0.01 0.01 0.01" />
      </geometry>
    </collision>

    <inertial>
      <origin xyz="0 0 0"/>
      <mass value="10"/>
      <inertia ixx="3.0" ixy="0.0" ixz="0.0"
               iyy="3.0" iyz="0.0" 
               izz="3.0" />
    </inertial>
  </link>


    
    <joint name="imu_joint" type="fixed">
        <parent link="base_link"/>
	<child link="imu_link"/>
	<origin xyz="0 0 0" rpy="0 0 0"/>  
    </joint>

    <link name="imu_link">
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="0.015 0.015 0.01"/>
        </geometry>
      <material name="blue"/>
      </visual>
      <collision>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="0.015 0.015 0.01"/>
        </geometry>
      </collision>
      <inertial>
        <mass value="0.01"/>
        <origin xyz="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
      </inertial>
    </link>

  
  <gazebo reference="imu_link">
    <gravity>false</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>200</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <pose>0 0 0 0 0 0</pose>
      
      
<imu>
  <angular_velocity>
    <x>
      <noise type="gaussian">
        <mean>0.0</mean>
        <stddev>0.0000873</stddev> <!-- 0.005 deg/s/sqrt(Hz) converted to rad/s -->
        <bias_mean>0.0000387</bias_mean> <!-- 8 deg/hr converted to rad/s -->
        <bias_stddev>0.00000222</bias_stddev> <!-- Bias instability as stddev -->
      </noise>
    </x>
    <y>
      <noise type="gaussian">
        <mean>0.0</mean>
        <stddev>0.0000873</stddev>
        <bias_mean>0.0000387</bias_mean>
        <bias_stddev>0.00000222</bias_stddev>
      </noise>
    </y>
    <z>
      <noise type="gaussian">
        <mean>0.0</mean>
        <stddev>0.0000873</stddev>
        <bias_mean>0.0000387</bias_mean>
        <bias_stddev>0.00000222</bias_stddev>
      </noise>
    </z>
  </angular_velocity>
  
  <linear_acceleration>
    <x>
      <noise type="gaussian">
        <mean>0.0</mean>
        <stddev>0.000196</stddev> <!-- 20 ug/sqrt(Hz) -->
        <bias_mean>0.00004</bias_mean> <!-- Bias instability -->
        <bias_stddev>0.00002</bias_stddev> <!-- Example value, refine based on application -->
      </noise>
    </x>
    <y>
      <noise type="gaussian">
        <mean>0.0</mean>
        <stddev>0.000196</stddev>
        <bias_mean>0.00004</bias_mean>
        <bias_stddev>0.00002</bias_stddev>
      </noise>
    </y>
    <z>
      <noise type="gaussian">
        <mean>0.0</mean>
        <stddev>0.000196</stddev>
        <bias_mean>0.00004</bias_mean>
        <bias_stddev>0.00002</bias_stddev>
      </noise>
    </z>
  </linear_acceleration>
</imu>


     
      
      
      
      
      
      
      
     
      
      
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu_raw</topicName>
        <update_rate>0</update_rate>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>200.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>base_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
    </sensor>
  </gazebo>


  <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/> 
  <xacro:VLP-16 parent="base_link" name="velodyne" topic="/velodyne_points" organize_cloud="${organize_cloud}" hz="10" samples="440" gpu="${gpu}"> 
    <origin xyz="0 0 0" rpy="0 0 0" /> 
  </xacro:VLP-16> 
  
    <gazebo>  
    <plugin name="ConstantVelocityPlugin" filename="libConstantVelocityPlugin.so">  
      <topicName>/cmd_vel</topicName>  
    </plugin>  
  </gazebo>  

</robot>
